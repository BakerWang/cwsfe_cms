buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'base'
apply plugin: 'jacoco'
apply plugin: 'org.flywaydb.flyway'

version = '3.0.1'
group = "eu.com.cwsfe.cms"
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint', '-Xlint:-serial', '-Xlint:-path']
}

dependencies {
    compile group: 'org.springframework', name: 'spring-tx', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '4.3.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '4.3.3.RELEASE'  //dla CommonsMultipartFile
    compile group: 'net.sf.ehcache', name: 'ehcache', version: '2.10.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1211'
    compile group: 'org.flywaydb', name: 'flyway-core', version: '4.0.3'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework', name: 'spring-test', version: '4.3.3.RELEASE'
}

jar.archiveName = "CWSFE_CMS_DAO-" + version + ".jar"

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "TEST-${project.archivesBaseName}".toUpperCase()
    from sourceSets.test.output
}

task integration_tests_local(type: Test) {
//    systemProperty "spring.profiles.active", "integration-tests-local";
    systemProperty "spring.profiles.test-groups", "integration-tests-local"
    systemProperty "spring.profiles.active", "tomcat"
}

configurations {
    tests
}

artifacts {
    tests testJar
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'cwsfe_cms_dao'
        property 'sonar.projectName', 'CWSFE cms dao'
        property 'sonar.sources', 'src/main'
        property 'sonar.tests', 'src/test'
        property 'sonar.sourceEncoding', 'UTF-8'
    }
}
